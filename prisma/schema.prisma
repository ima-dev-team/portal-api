generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model abouts {
  id          Int             @id @default(autoincrement())
  description String          @db.LongText
  section     abouts_section?
  posto       Int?
  created_at  DateTime?       @default(now()) @db.Timestamp(0)
  updated_at  DateTime?       @default(now()) @updatedAt @db.Timestamp(0)
}

model activity_log {
  id          Int      @id @default(autoincrement())
  user_id     Int      @db.UnsignedInt
  description String   @db.Text
  created_at  DateTime @default(now()) @db.Timestamp(0)

  @@index([user_id], map: "activity_log_FK_1")
}

model assignments {
  id          Int      @id @default(autoincrement())
  description String   @db.Text
  posto       Int
  created_at  DateTime @default(now()) @db.Timestamp(0)
  updated_at  DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @updatedAt @db.Timestamp(0)
}

model configuracoes {
  id         Int                   @id @default(autoincrement())
  title      String?               @db.VarChar(110)
  type       String?               @db.LongText
  section    configuracoes_section
  posto      Int
  created_at DateTime?             @default(now()) @db.Timestamp(0)
  updated_at DateTime?             @default(now()) @updatedAt @db.Timestamp(0)
  postoId    Int?
  postos     postos?               @relation(fields: [postoId], references: [id])

  @@index([postoId], map: "configuracoes_postoId_fkey")
}

model contactos {
  id         Int      @id
  name       String   @db.VarChar(100)
  email      String   @db.VarChar(100)
  phone      String   @db.VarChar(111)
  posto      Int
  messagem   String   @db.LongText
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model entity_and_projects {
  id             Int                         @id @default(autoincrement())
  cover          String?                     @db.VarChar(255)
  title          String?                     @db.VarChar(200)
  posto          Int?
  description    String?                     @db.Text
  link           String?                     @db.VarChar(200)
  links          String?                     @db.VarChar(110)
  section        entity_and_projects_section
  sectores       String?                     @db.VarChar(110)
  porcentual     String?                     @db.VarChar(100)
  datarealizacao String?                     @db.VarChar(110)
  edicao         String?                     @db.VarChar(110)
  local          String?                     @db.VarChar(110)
  condicaoAcesso String?                     @db.VarChar(110)
  promotor       String?                     @db.VarChar(110)
  organizador    String?                     @db.VarChar(110)
  created_at     DateTime?                   @default(now()) @db.Timestamp(0)
  updated_at     DateTime?                   @default(now()) @updatedAt @db.Timestamp(0)

  @@index([posto], map: "posto_index")
}

model galery {
  id         Int            @id @default(autoincrement())
  title      String         @db.LongText
  cover      String         @db.VarChar(110)
  posto      Int
  link       String?        @db.VarChar(110)
  section    galery_section
  created_at DateTime?      @default(now()) @db.Timestamp(0)
  updated_at DateTime?      @default(now()) @updatedAt @db.Timestamp(0)
}

model galery_item {
  id         Int       @id @default(autoincrement())
  id_album   Int?
  cover      String?   @db.VarChar(210)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @updatedAt @db.Timestamp(0)
}

model municipio {
  id            Int       @id @default(autoincrement())
  provincia_id  Int
  name          String    @db.VarChar(100)
  is_capital    String    @default("N") @db.Char(1)
  administrador Int?
  densidade     String    @db.VarChar(255)
  data_fundacao DateTime  @db.Date
  created_at    DateTime  @default(now()) @db.Timestamp(0)
  updated_at    DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  buaps         buaps[]
  profiles      profiles? @relation(fields: [administrador], references: [id], onUpdate: SetNull, map: "fk_profiles_municipio")
  regioes       regioes[]

  @@index([administrador], map: "fk_profiles_municipio")
}

model postos {
  id            Int             @id @default(autoincrement())
  title         String          @db.VarChar(255)
  sigla         String          @db.VarChar(255)
  domain        String?         @db.VarChar(255)
  cover         String?         @db.VarChar(500)
  type          postos_type?
  embaixada     Int?
  created_at    DateTime?       @default(now()) @db.DateTime(0)
  updated_at    DateTime?       @default(now()) @updatedAt @db.DateTime(0)
  agenda        agenda[]
  buaps         buaps[]
  configuracoes configuracoes[]
  faq           faq[]
  menu          menu[]
  paginas       paginas[]
  parceiros     parceiros[]
  posts         posts[]
  profiles      profiles[]
  slides        slides[]

  @@index([id], map: "id_index")
}

model paginas {
  id         Int            @id @default(autoincrement())
  name       String
  content    String?        @default("'\\\\'\\\\\\\\\\\\' \\\\\\\\\\\\'\\\\''") @db.LongText
  css        String?        @db.Text
  status     paginas_status @default(rascunho)
  postoId    Int?
  created_at DateTime       @default(now())
  updated_at DateTime       @default(now()) @updatedAt
  slug       String?
  page_type  String?        @db.VarChar(255)
  postos     postos?        @relation(fields: [postoId], references: [id])

  @@index([postoId], map: "paginas_postoId_fkey")
}

model menu {
  id         Int       @id @default(autoincrement())
  postoId    Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now()) @updatedAt
  order      Int?
  url        String?
  page_id    Int?
  parentId   Int?
  title      String
  parent     menu?     @relation("MenuItemToMenuItem", fields: [parentId], references: [id], map: "Menu_parentId_fkey")
  children   menu[]    @relation("MenuItemToMenuItem")
  postos     postos?   @relation(fields: [postoId], references: [id], map: "Menu_postoId_fkey")

  @@index([parentId], map: "Menu_parentId_fkey")
  @@index([postoId], map: "Menu_postoId_fkey")
}

model posts {
  id             Int            @id @default(autoincrement()) @db.UnsignedInt
  author         Int?           @db.UnsignedInt
  title          String?        @db.Text
  uri            String?        @db.Text
  content        String?        @db.Text
  cover          String?        @db.Text
  video          String?        @db.Text
  views          Int?           @default(0)
  posto          Int?
  section        posts_section?
  fonte          String?        @db.VarChar(110)
  status         String         @default("draft") @db.VarChar(20)
  destaque       Int?
  efemeride      Boolean        @default(false)
  data_efemeride DateTime?      @db.Date
  campanha       posts_campanha @default(N)
  post_at        DateTime?      @default(now()) @db.Timestamp(0)
  created_at     DateTime       @default(now()) @db.Timestamp(0)
  updated_at     DateTime       @default(now()) @updatedAt @db.Timestamp(0)
  deleted_at     DateTime?      @db.Timestamp(0)
  postos         postos?        @relation(fields: [posto], references: [id], onUpdate: SetNull, map: "posto_index")

  @@index([posto], map: "posto_index")
}

model privacy_and_policy {
  id          Int      @id @default(autoincrement())
  description String   @db.Text
  posto       Int
  created_at  DateTime @default(now()) @db.Timestamp(0)
  updated_at  DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @updatedAt @db.Timestamp(0)
}

model profiles {
  id                        Int              @id @default(autoincrement())
  name                      String           @db.VarChar(100)
  description               String           @db.Text
  data_nomeacao             String?          @db.VarChar(110)
  photo                     String           @db.VarChar(110)
  posto                     Int
  section                   profiles_section
  cargo                     String?          @db.VarChar(110)
  cargo_id                  Int?
  provincia_vice_governador Int?
  created_at                DateTime?        @default(now()) @db.Timestamp(0)
  updated_at                DateTime?        @default(now()) @updatedAt @db.Timestamp(0)
  postoId                   Int?
  municipio                 municipio[]
  cargos                    cargos?          @relation(fields: [cargo_id], references: [id], map: "profiles_cargoId_fkey")
  postos                    postos?          @relation(fields: [postoId], references: [id])
  provincia                 provincia[]

  @@index([postoId], map: "profiles_postoId_fkey")
  @@index([cargo_id], map: "profiles_cargoId_fkey")
}

model profiles_descriptions {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(200)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model provincia {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(100)
  lingua        String    @db.VarChar(255)
  etnia         String    @db.VarChar(255)
  extensao      String    @db.VarChar(255)
  governador    Int?
  image_mapa    String    @db.LongText
  densidade     String    @db.VarChar(255)
  data_fundacao DateTime  @db.Date
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  buaps         buaps[]
  profiles      profiles? @relation(fields: [governador], references: [id], map: "fk_profiles_provincia")

  @@index([governador], map: "fk_profiles_provincia")
}

model real_access {
  id          Int       @id @default(autoincrement())
  user_id     Int?
  access_time DateTime  @default(now()) @db.Timestamp(0)
  user_agent  String?   @db.VarChar(255)
  ip_address  String?   @db.VarChar(50)
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @updatedAt @db.Timestamp(0)
}

model report_access {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  users      Int      @default(1)
  views      Int      @default(1)
  pages      Int      @default(1)
  posto      Int?
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model report_online {
  id         Int      @id @default(autoincrement()) @db.UnsignedInt
  user       Int?     @db.UnsignedInt
  ip         String   @default("") @db.VarChar(50)
  url        String   @default("") @db.VarChar(255)
  agent      String   @default("") @db.VarChar(255)
  pages      Int      @default(1)
  posto      Int?
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model slides {
  id          Int       @id @default(autoincrement())
  title       String    @db.Text
  cover       String    @db.Text
  link        String?   @db.Text
  posto       Int
  description String?   @db.Text
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  postoId     Int?
  postos      postos?   @relation(fields: [postoId], references: [id], onDelete: Restrict, onUpdate: Restrict)

  @@index([postoId], map: "slides_postoId_fkey")
}

model stats_farming {
  id            Int       @id @default(autoincrement())
  provincia     Int
  municipio     Int
  comuna        String    @db.VarChar(100)
  toneladas     Int
  tipos_cultura String    @db.VarChar(500)
  hectares      Int
  viveiros      String    @db.VarChar(110)
  posto         Int
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @updatedAt @db.Timestamp(0)
}

model stories {
  id          Int      @id @default(autoincrement())
  description String   @db.Text
  posto       Int
  created_at  DateTime @default(now()) @db.Timestamp(0)
  updated_at  DateTime @default(dbgenerated("('0000-00-00 00:00:00')")) @updatedAt @db.Timestamp(0)
}

model upload {
  id         Int             @id @default(autoincrement())
  titulo     String?         @db.Text
  ficheiro   String?         @db.VarChar(110)
  section    upload_section? @default(Relat_rios_e_Estat_stica)
  posto      Int?
  created_at DateTime        @default(now()) @db.Timestamp(0)
  updated_at DateTime        @default(now()) @updatedAt @db.Timestamp(0)
}

model users {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  first_name String    @default("") @db.VarChar(255)
  last_name  String    @default("") @db.VarChar(255)
  email      String    @default("") @db.VarChar(255)
  password   String    @default("") @db.VarChar(255)
  level      Int
  forget     String?   @db.VarChar(255)
  phone      String?   @db.VarChar(111)
  photo      String?   @db.VarChar(255)
  posto      Int
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @updatedAt @db.Timestamp(0)
}

model buaps {
  id           Int        @id @default(autoincrement())
  posto_id     Int?
  provincia_id Int?
  municipio_id Int?
  phone_number String     @db.VarChar(255)
  email        String     @db.VarChar(255)
  atendimento  String     @db.VarChar(255)
  map_link     String     @db.Text
  created_at   DateTime   @default(now()) @db.Timestamp(0)
  updated_at   DateTime   @default(now()) @db.Timestamp(0)
  municipio    municipio? @relation(fields: [municipio_id], references: [id], onUpdate: Restrict)
  provincia    provincia? @relation(fields: [provincia_id], references: [id], onUpdate: Restrict, map: "buaps_provincia_id_index")
  postos       postos?    @relation(fields: [posto_id], references: [id], onUpdate: Restrict, map: "posto_id_index")

  @@index([municipio_id], map: "municipio_id_index")
  @@index([posto_id], map: "posto_id_index")
  @@index([provincia_id], map: "provincia_id_index")
}

model item_menu {
  id         Int       @id @default(autoincrement())
  menus      String    @db.VarChar(100)
  posto      Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model item_submenu {
  id         Int       @id @default(autoincrement())
  id_menu    String    @db.VarChar(100)
  title_menu String    @db.VarChar(110)
  uri        String    @db.VarChar(100)
  link       String?   @db.VarChar(100)
  content    String    @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
}

model mail_queue {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  subject         String    @default("") @db.VarChar(255)
  body            String    @db.Text
  from_email      String    @default("") @db.VarChar(255)
  from_name       String    @default("") @db.VarChar(255)
  recipient_email String    @default("") @db.VarChar(255)
  recipient_name  String    @default("") @db.VarChar(255)
  sent_at         DateTime? @db.Timestamp(0)
  created_at      DateTime  @default(now()) @db.Timestamp(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
}

model cargos {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  profiles   profiles[]
}

model parceiros {
  id         Int      @id @default(autoincrement())
  image      String   @db.Text
  link       String   @db.Text
  posto      Int
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  postos     postos   @relation(fields: [posto], references: [id], onUpdate: Restrict, map: "fk_posto_parceiros")

  @@index([posto], map: "fk_posto_parceiros")
}

model regioes {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(255)
  municipio_id Int
  tipo         regioes_tipo
  created_at   DateTime     @default(now()) @db.Timestamp(0)
  updated_at   DateTime     @default(now()) @db.Timestamp(0)
  municipio    municipio    @relation(fields: [municipio_id], references: [id], onDelete: Cascade, map: "fk_regioes_municipio")

  @@index([municipio_id], map: "fk_regioes_municipio")
}

model yearly_statistics {
  id         Int      @id @default(autoincrement())
  post_id    Int
  stats_year Int?
  january    Float?
  february   Float?
  march      Float?
  april      Float?
  may        Float?
  june       Float?
  july       Float?
  august     Float?
  september  Float?
  october    Float?
  november   Float?
  december   Float?
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
}

model faq {
  id          Int     @id @default(autoincrement())
  title       String? @db.VarChar(255)
  description String? @db.Text
  postoId     Int?
  postos      postos? @relation(fields: [postoId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "faq_ibfk_1")

  @@index([postoId], map: "postoId")
}

model agenda {
  id         Int       @id @default(autoincrement())
  date       DateTime? @db.Date
  start_time DateTime? @db.Time(0)
  end_time   DateTime? @db.Time(0)
  activity   String?   @db.VarChar(255)
  postoId    Int?
  postos     postos?   @relation(fields: [postoId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "agenda_ibfk_1")

  @@index([postoId], map: "postoId")
}

enum paginas_status {
  rascunho
  publicado
}

enum galery_section {
  ImagensAngola
  GaleriaEmbaixadores
  GaleriaDeActividades
  Imagens
  Videos
}

enum entity_and_projects_section {
  Entidades
  Projectos
  EducacaoAmbiental
  Eventos
  Organizacoes
  Porcentual
}

enum configuracoes_section {
  Facebook
  Youtube
  UrlMapa
  Telefone
  Email
  Localizacao
  Link
  Video
  Twitter
  Instagram
  Linkedin
  WhatsApp
}

enum regioes_tipo {
  Distrito
  Comuna
}

enum posts_campanha {
  N
  S
}

enum abouts_section {
  SobreNos
  Atribuicoes
  Historia
  Politica
  Estrutura
  Missao
  MensagemEmbaixador
  Demografia
  LocalizacaoGeografica
  DptMinisteriais
  AssembleiaNacional
  Governo
  Embaixadas
  Consulados
}

enum upload_section {
  Legisla__o               @map("Legislação")
  Comunicados
  Formul_rios              @map("Formulários")
  Acordos_de_Coopera__o    @map("Acordos de Cooperação")
  Relat_rios_e_Estat_stica @map("Relatórios e Estatística")
  Recortes
}

enum postos_type {
  Embaixada
  Consulado
  PostoConsular
  Minist_rio    @map("Ministério")
}

enum profiles_section {
  PerfilTitular
  TitularesMinisterios
  Presidente
  CorpoDiplomatico
  Mirex
}

enum posts_section {
  Noticias
  Turismo
  Eventos
}
